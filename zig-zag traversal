
    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        
  vector<vector<int>> result;
    
    if (!root) {
        return result;
    }
    queue<TreeNode*> q;
    q.push(root);
    bool reverseLevel = false;

    while (!q.empty()) {
        int levelSize = q.size();
        vector<int> levelValues(levelSize);

        for (int i = 0; i < levelSize; i++) {
            TreeNode* node = q.front();
             q.pop();

            int index = reverseLevel ? levelSize - i - 1 : i;
            levelValues[index] = node->val;

            if (node->left) {
                q.push(node->left);
            }

            if (node->right) {
                q.push(node->right);
            }
        }
        
        result.push_back(levelValues);
        reverseLevel = !reverseLevel;
    }

    return result;

    }
};
